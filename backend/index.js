const app = require("./server");
module.exports = app;
// The frontend code is written in React using Next.js, while the backend code is written in Node.js using Express.js. The frontend code uses the Next.js framework to create a static website with dynamic routing and server-side rendering capabilities. The backend code uses Express.js to create a RESTful API for handling authentication, exams, admin operations, courses, and questions. The frontend code uses CSS modules for styling, while the backend code uses middleware like cors and mongoose for handling requests and connecting to a MongoDB database. The frontend code uses the Image component from Next.js for optimized image loading, while the backend code uses environment variables for configuration. Both frontend and backend code are modular and follow best practices for code organization and separation of concerns. The frontend code is deployed on Vercel, while the backend code is deployed on a serverless platform like AWS Lambda or Google Cloud Functions. The frontend and backend code communicate with each other using HTTP requests and RESTful APIs. The frontend code fetches data from the backend code to display content on the website, while the backend code processes requests and sends responses to the frontend code. The frontend code includes components like headers, footers, and sections for different pages, while the backend code includes routes for handling different API endpoints. The frontend code uses React hooks and state management for interactive components, while the backend code uses middleware and controllers for request handling and response generation. Overall, the frontend and backend code work together to create a full-stack web application with a modern, responsive design and robust functionality.